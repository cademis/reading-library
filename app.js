const initialData = [
  {
    name: "Bench Press",
    unit: "kg",
    goal: 80,
  },
  {
    name: "Cable Row",
    unit: "kg",
    goal: 60,
  },
  {
    name: "Squat",
    unit: "kg",
    goal: 100,
  },
  {
    name: "Deadlift",
    unit: "kg",
    goal: 120,
  },
  {
    name: "Shoulder Press",
    unit: "kg",
    goal: 50,
  },
];

class Exercise {
  constructor(name, unit, goal) {
    this.name = name;
    this.unit = unit;
    this.goal = goal;
  }
}

class ExerciseLibrary {
  constructor() {
    this.exercises = [];
  }

  // exercise should be generated by creating a newExercise = new Exercise(x,y,z)
  addExercise(exercise) {
    this.exercises.push(exercise);
  }

  removeExercise(index) {
    this.exercises.splice(index, 1);
  }

  editExercise(index, exercise) {
    this.exercises[index] = exercise;
  }
}

class UI {
  constructor(library) {
    this.library = library;
    this.formElem = document.querySelector("#form");
    this.showFormBtn = document.querySelector("#showForm");
    this.filterInput = document.querySelector("#filterInput");
    this.setupEventlisteners();
  }

  setupEventlisteners() {
    this.formElem.addEventListener("submit", (e) => {
      e.preventDefault();
      const nameInput = this.formElem.querySelector("#name").value;
      const unitInput = this.formElem.querySelector("#unit").value;
      const goalInput = this.formElem.querySelector("#goal").value;
      const newExercise = new Exercise(nameInput, unitInput, goalInput);
      this.library.addExercise(newExercise);
      this.updateDisplay();
    });

    this.filterInput.addEventListener("keyup", this.filterTable.bind(this));
  }

  updateDisplay() {
    let myTable = document.getElementById("myTable");
    myTable.innerHTML = "";
    this.library.exercises.forEach((exercise, index) => {
      let row = document.createElement("tr");
      let col1 = document.createElement("td");
      let col2 = document.createElement("td");
      let col3 = document.createElement("td");
      col1.innerText = `${exercise.name}`;
      col2.innerText = `${exercise.goal}${exercise.unit}`;
      let deleteButton = document.createElement("button");
      deleteButton.innerHTML = "X";
      col3.appendChild(deleteButton);
      row.appendChild(col1);
      row.appendChild(col2);
      row.appendChild(col3);
      myTable.appendChild(row);
      deleteButton.addEventListener("click", () => {
        this.library.removeExercise(index);
        this.updateDisplay();
      });
    });
  }

  filterTable() {
    let filterValue = this.filterInput.value.toUpperCase();
    let table = document.getElementById("myTable");
    let tr = table.getElementsByTagName("tr");
    for (let i = 0; i < tr.length; i++) {
      let td = tr[i].getElementsByTagName("td")[0];
      if (td) {
        let txtValue = td.textContent || td.innerText;
        if (txtValue.toUpperCase().indexOf(filterValue) > -1) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  }
}

// initialize the library, add the intial data and intializeUI
const newLibrary = new ExerciseLibrary();

initialData.forEach((data) => {
  const exercise = new Exercise(data.name, data.unit, data.goal);
  newLibrary.addExercise(exercise);
});

const ui = new UI(newLibrary);
ui.updateDisplay();

// data to initialise the table with
